---
- name: Add a system user "{{ pulsar_user }}"
  user: 
    name: "{{ pulsar_user }}"
    create_home: false
    system: yes
    state: present

- name: Add "{{ ansible_ssh_user }}" into group "{{ pulsar_user }}" 
  user:
    name: "{{ ansible_ssh_user }}"
    groups: "{{ pulsar_user }}"
    append: yes

- name: Create folder "{{ tgt_pkg_dir }}" 
  file:
    path: "{{ tgt_pkg_dir }}"
    state: directory
    recurse: yes
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"

- name: Check if DS Pulsar distro already exists on remote host
  stat:
    path: "{{ tgt_pkg_dir }}/apache-pulsar-{{ pulsar_ver }}-bin.tar.gz"
  register: ds_distro_stat

- name: Copy file DS Pulsar distro from local to remote if remote file doesn't exist
  copy:
    src: "{{ ds_distro_local_folder }}/apache-pulsar-{{ pulsar_ver }}-bin.tar.gz"
    dest: "{{ tgt_pkg_dir }}/apache-pulsar-{{ pulsar_ver }}-bin.tar.gz"
  when: not ds_distro_stat.stat.exists

# - name: Download pulsar version "{{ pulsar_ver }}"
#   set_fact:
#     pulsar_bin_download_url: 
#   get_url:
#     url: "{{ pulsar_bin_download_url }}"
#     dest: "{{ tgt_pkg_dir }}/apache-pulsar-{{ pulsar_ver }}-bin.tar.gz"
#     owner: "{{ pulsar_user }}"
#     group: "{{ pulsar_user }}"

- name: Create Pulsar binary folder "{{ tgt_pulsar_inst_dir }}/logs"
  file:
    path: "{{ tgt_pulsar_inst_dir }}/logs"
    state: directory
    recurse: yes
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"

- name: Extract downloaded Pulsar binary archive file to folder "{{ tgt_pulsar_inst_dir }}"
  unarchive:
    src: "{{ tgt_pkg_dir }}/apache-pulsar-{{ pulsar_ver }}-bin.tar.gz"
    remote_src: yes
    dest: "{{ tgt_pulsar_inst_dir }}"
    extra_opts: [--strip-components=1]
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"

- name: Create folder "{{ tgt_pulsar_inst_dir }}/connectors", if needed 
  file:
    path: "{{ tgt_pulsar_inst_dir }}/connectors"
    state: directory
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"
    recurse: yes
  # when: builtin_connector|bool

- name: Check if DS C* sink connector file already exists on remote host
  stat:
    path: "{{ tgt_pulsar_inst_dir }}/connectors/cassandra-enhanced-pulsar-sink-1.4.0.nar"
  register: ds_sink_stat

- name: Copy file DS Pulsar distro from local to remote if remote file doesn't exist
  copy:
    src: "{{ ds_distro_local_folder }}/cassandra-enhanced-pulsar-sink-1.4.0.nar"
    dest: "{{ tgt_pulsar_inst_dir }}/connectors/cassandra-enhanced-pulsar-sink-1.4.0.nar"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"
  when: not ds_sink_stat.stat.exists

- name: Download Pulsar built-in I/O Connectors, if needed
  get_url:
    url: "{{ pulsar_connector_download_url_base }}/pulsar-io-{{ item }}-{{ pulsar_ver }}.nar"
    dest: "{{ tgt_pulsar_inst_dir }}/connectors/pulsar-io-{{ item }}-{{ pulsar_ver }}.nar"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"
  with_items:
    - "{{ pulsar_connectors }}"
  when: builtin_connector|bool

- name: Create folder "{{ tgt_pulsar_inst_dir }}/offloaders", if needed 
  file:
    path: "{{ tgt_pulsar_inst_dir }}/offloaders"
    state: directory
    owner: "{{ pulsar_user }}"    
    group: "{{ pulsar_user }}"    
    recurse: yes
  # when: builtin_connector | bool

- name: Download Pulsar TieredStorage Offloaders, if needed
  get_url:
    url: "{{ pulsar_ts_offloader_bin_download_url }}"
    dest: "{{ tgt_pkg_dir }}/apache-pulsar-offloaders-{{ pulsar_ver }}-bin.tar.gz"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"
  when: tierstorage_offloader | bool

- name: Extract downloaded Pulsar TieredStorage Offloader archive file to folder "{{ tgt_pulsar_inst_dir }}/offloaders"
  unarchive:
    src: "{{ tgt_pkg_dir }}/apache-pulsar-offloaders-{{ pulsar_ver }}-bin.tar.gz"
    remote_src: yes
    dest: "{{ tgt_pulsar_inst_dir }}/offloaders"
    extra_opts: [--strip-components=2]
    owner: "{{ pulsar_user }}"    
    group: "{{ pulsar_user }}"
  when: tierstorage_offloader | bool

- name: Copy dependency jar files (e.g. for connectors) from local to remote
  copy:
    src: "{{ ds_distro_local_folder }}/lib/{{ item }}"
    dest: "{{ tgt_pulsar_inst_dir }}/lib/{{ item }}"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"
  with_items:
    - kafka-clients-2.7.0.jar

- name: Fix permissions on the extract directory and sub-directories
  file:
    path: "{{ tgt_pulsar_inst_dir }}"
    owner: "{{ pulsar_user }}"    
    group: "{{ pulsar_user }}"
    mode: 0775
    recurse: yes

- name: Create bookie journal and data directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
    owner: "{{ pulsar_user }}"    
    group: "{{ pulsar_user }}"  
  with_items:
    - "{{ bookie_storage_mnt_path_base }}"