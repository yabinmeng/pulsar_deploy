---
- name: Create folder "{{ tgt_pkg_dir_pm }}" 
  file:
    path: "{{ tgt_pkg_dir_pm }}"
    state: directory
    recurse: yes
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"

- name: Download pulsar version "{{ pulsar_manager_ver }}"
  get_url:
    url: "{{ pulsar_manager_bin_download_url }}"
    dest: "{{ tgt_pkg_dir_pm }}/apache-pulsar-manager-{{ pulsar_manager_ver }}-bin.tar.gz"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"

- name: Create folder "{{ tgt_pulsar_mgr_inst_dir }}"
  file:
    path: "{{ tgt_pulsar_mgr_inst_dir }}"
    state: directory
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"

- name: Extract downloaded Pulsar manager binary archive file from "apache-pulsar-manager-{{ pulsar_manager_ver }}-bin.tar.gz" to "pulsar-manager.tar"
  unarchive:
    src: "{{ tgt_pkg_dir_pm }}/apache-pulsar-manager-{{ pulsar_manager_ver }}-bin.tar.gz"
    remote_src: yes
    dest: "{{ tgt_pkg_dir_pm }}"
    extra_opts: [--strip-components=1]
    owner: "{{ pulsar_user }}"    
    group: "{{ pulsar_user }}"

- name: Extract downloaded Pulsar manager binary archive file from "pulsar-manager.tar" to the target installation folder "{{ tgt_pulsar_mgr_inst_dir }}"
  unarchive:
    src: "{{ tgt_pkg_dir_pm }}/pulsar-manager.tar"
    remote_src: yes
    dest: "{{ tgt_pulsar_mgr_inst_dir }}"
    extra_opts: [--strip-components=1]
    owner: "{{ pulsar_user }}"    
    group: "{{ pulsar_user }}"

- name: Copy Pulsar manager UI component to the target installation folder "{{ tgt_pulsar_mgr_inst_dir }}"
  copy:
    src: "{{ tgt_pkg_dir_pm }}/dist/"
    remote_src: yes
    dest: "{{ tgt_pulsar_mgr_inst_dir }}/ui/"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user }}"

- name: Enable bookkeepr visual manager
  lineinfile:
    path: "{{ tgt_pulsar_mgr_inst_dir }}/bkvm.conf"
    regexp: "^bkvm.enabled="
    line: "bkvm.enabled=true"

- name: Modify "application.properties" file to reflect Pulsar manager listening port
  lineinfile:
    path: "{{ tgt_pulsar_mgr_inst_dir }}/application.properties"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^server.port=', line: 'server.port={{ pulsar_mgr_webui_port }}' }